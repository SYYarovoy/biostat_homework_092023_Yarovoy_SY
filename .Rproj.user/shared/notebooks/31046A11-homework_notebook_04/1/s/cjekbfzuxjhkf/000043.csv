"0",""
"0","# Пропущенные значения есть только по переменным bmi (N/A) и smoking_status (""Unknown""). Таким образом, удаление субъектов с пропущенными значениями нерационально (пропущено не более 2 значений в каждой строке). Проверяем обе указанные переменные на количество пропущенных значений и удаляем, если их более 20%."
"0",""
"0","cleaned_data <- data %>%"
"0","  mutate (across(where(function(x) sum(x == ""N/A"") > length(x) * 0.2 | sum(x == ""Unknown"") > length(x) * 0.2), function(x) x = NULL)) %>% # Переменная status_smoking была удалена."
"0","  rename(ID = id, Gender = gender, Age = age, Hypertension = hypertension, Cardiovascular_diseases = heart_disease, Ever_married = ever_married, Work_type = work_type, Average_glucose_level = avg_glucose_level, BMI = bmi, Stroke = stroke) %>% # Пробелы в названиях оставлены в варианте нижнего подчеркивания для снижения вероятности ошибок при обращении к переменным. Предложенный вариант на английском языке достаточно читаемый, на русский язык переименование не проводилось"
"0","  mutate(across(c(ID, Age, Average_glucose_level, BMI), function(x) as.character(x) %>% na_if(., ""N/A"") %>% as.numeric())) %>% # Приведение переменных к типу numeric и замена значений ""N/A"" в переменной BMI на NA"
"0","  mutate(across(c(Gender, Hypertension, Cardiovascular_diseases, Ever_married, Work_type, Residence_type, Stroke), function(x) as.factor(x))) %>% # Приведение переменных к типу factor"
"0","  arrange(desc(Age)) # Сортировка по возрасту"
"0",""
"0","# Задание 5"
"0","outliers <- cleaned_data %>% "
"0","  filter(!between(Age, mean(Age, na.rm = TRUE) - 3 * sd(Age, na.rm = TRUE), mean(Age, na.rm = TRUE) + 3 * sd(Age, na.rm = TRUE)) | !between(Average_glucose_level, mean(Average_glucose_level, na.rm = TRUE) - 3 * sd(Average_glucose_level, na.rm = TRUE), mean(Average_glucose_level, na.rm = TRUE) + 3 * sd(Average_glucose_level, na.rm = TRUE)) | !between(BMI, mean(BMI, na.rm = TRUE) - 3 * sd(BMI, na.rm = TRUE), mean(BMI, na.rm = TRUE) + 3 * sd(BMI, na.rm = TRUE)))"
"0",""
"0","readr::write_excel_csv(outliers, ""data/raw/outliers.csv"")"
"0","  "
